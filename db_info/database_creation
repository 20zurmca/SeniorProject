--Database Creation


--Create tables for roster data aggregation and copy in data

CREATE TABLE roster_data ("roster_data.Roster_Year" INT, "roster_data.Player_Number" VARCHAR(10), "roster_data.First_Name" VARCHAR(50), "roster_data.Last_Name" VARCHAR(50),  "roster_data.Year" VARCHAR(10), "roster_data.Position1" VARCHAR(20), "roster_data.Position2" VARCHAR(20), "roster_data.Position3" VARCHAR(10), "roster_data.Height" VARCHAR(10), "roster_data.Weight" INT, "roster_data.Home_Town" VARCHAR(30), "roster_data.State_or_Country" VARCHAR(20), "roster_data.High_School" VARCHAR(100), "roster_data.Alternative_School" VARCHAR(50), "roster_data.College" VARCHAR(50), "roster_data.College_League" VARCHAR(50), "roster_data.Bio_Link" VARCHAR(100));

\COPY roster_data FROM 'roster_data.csv' DELIMITER ',' CSV HEADER;

CREATE TABLE starter_data("starter_data.Roster_Year" INT, "starter_data.Number" INT, "starter_data.First_Name" VARCHAR(50), "starter_data.Last_Name" VARCHAR(50), "starter_data.Potential_Starts" INT, "starter_data.GP" INT, "starter_data.GS" INT, "starter_data.Is_Starter" VARCHAR(1), "starter_data.College" VARCHAR(50));

\COPY starter_data FROM 'starter_data.csv' DELIMITER ',' CSV HEADER;

CREATE TABLE accolade_data("accolade_data.Roster_Year" INT, "accolade_data.First_Name" VARCHAR(50), "accolade_data.Last_Name" VARCHAR(50), "accolade_data.Accolade" VARCHAR(20), "accolade_data.College" VARCHAR(50));

\COPY accolade_data FROM 'accolades.csv' DELIMITER ',' CSV HEADER;


--Join with starter data

CREATE TABLE roster_starter_data AS (
	SELECT "roster_data.Roster_Year", "roster_data.Player_Number", "roster_data.First_Name", "roster_data.Last_Name", "roster_data.Year", "roster_data.Position1", "roster_data.Position2", "roster_data.Position3", "roster_data.Height", "roster_data.Weight", "roster_data.Home_Town", "roster_data.State_or_Country", "roster_data.High_School", "roster_data.Alternative_School", "roster_data.College", "roster_data.College_League", "roster_data.Bio_Link", "starter_data.Potential_Starts", "starter_data.GP", "starter_data.GS", "starter_data.Is_Starter"
	FROM roster_data
	LEFT JOIN starter_data
	ON "roster_data.First_Name"="starter_data.First_Name" AND "roster_data.Last_Name"="starter_data.Last_Name" AND "roster_data.Roster_Year"="starter_data.Roster_Year" AND "roster_data.College"="starter_data.College"
);


--Join with accolade data

CREATE TABLE roster_master_data AS (
	SELECT "roster_data.Roster_Year", "roster_data.Player_Number", "roster_data.First_Name", "roster_data.Last_Name", "roster_data.Year", "roster_data.Position1", "roster_data.Position2", "roster_data.Position3", "roster_data.Height", "roster_data.Weight", "roster_data.Home_Town", "roster_data.State_or_Country", "roster_data.High_School", "roster_data.Alternative_School", "roster_data.College", "roster_data.College_League", "roster_data.Bio_Link", "starter_data.Potential_Starts", "starter_data.GP", "starter_data.GS", "starter_data.Is_Starter", "accolade_data.Accolade"
	FROM roster_starter_data
	LEFT JOIN accolade_data
	ON "roster_data.First_Name"="accolade_data.First_Name" AND "roster_data.Last_Name"="accolade_data.Last_Name" AND "roster_data.Roster_Year"="accolade_data.Roster_Year" AND "roster_data.College"="accolade_data.College"
);


--Drop extra tables

DROP TABLE roster_data;
DROP TABLE starter_data;
DROP TABLE accolade_data;
DROP TABLE roster_starter_data;


--Rename attributes without the table name

ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Roster_Year" TO Roster_Year;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.First_Name" TO First_Name;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Last_Name" TO Last_Name;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Year" TO Year;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Position1" TO Position1;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Position2" TO Position2;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Position3" TO Position3;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Height" TO Height;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Weight" TO Weight;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Home_Town" TO Home_Town;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.State_or_Country" TO State_or_Country;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.High_School" TO High_School;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Alternative_School" TO Alternative_School;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.College" TO College;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.College_League" TO College_League;
ALTER TABLE roster_master_data RENAME COLUMN "roster_data.Bio_Link" TO Bio_Link;
ALTER TABLE roster_master_data RENAME COLUMN "starter_data.Potential_Starts" TO Potential_Starts;
ALTER TABLE roster_master_data RENAME COLUMN "starter_data.GP" TO GP;
ALTER TABLE roster_master_data RENAME COLUMN "starter_data.GS" TO GS;
ALTER TABLE roster_master_data RENAME COLUMN "starter_data.Is_Starter" TO Is_Starter;
ALTER TABLE roster_master_data RENAME COLUMN "accolade_data.Accolade" TO Accolade;


--Drop unneeded columns

ALTER TABLE roster_master_data DROP COLUMN Position2;
ALTER TABLE roster_master_data DROP COLUMN Position3;
ALTER TABLE roster_master_data DROP COLUMN Potential_Starts;
ALTER TABLE roster_master_data DROP COLUMN GP;
ALTER TABLE roster_master_data DROP COLUMN GS;


-- Drop those entires with a null high school and alternative school

DELETE FROM roster_master_data
WHERE High_School IS NULL AND Alternative_School IS NULL;

-- \Copy roster_master_data to 'roster_master_data.csv' DELIMITER ',' CSV HEADER;


--Create table for high school data and copy in the data

CREATE TABLE high_school_data (City VARCHAR(30), Institution VARCHAR(100), "State/Province" VARCHAR(20), Country VARCHAR(50), Latitude DOUBLE PRECISION, Longitude DOUBLE PRECISION, "Public/Private/International" VARCHAR(20));

\COPY high_school_data FROM 'CombinedHighSchools.csv' DELIMITER ',' CSV HEADER;

UPDATE high_school_data SET Institution = LOWER(Institution);

-- \Copy high_school_data to 'high_school_data.csv' DELIMITER ',' CSV HEADER;



-- Matching Operations


--Guaranteed matched Public School data

CREATE TABLE roster_public_school1 AS (
	SELECT *
	FROM roster_master_data
	JOIN high_school_data
	ON high_school_data."Public/Private/International" = 'PUBLIC' AND (
		LOWER(roster_master_data.High_School) = LOWER(high_school_data.Institution)
	) AND (
		LOWER(high_school_data."State/Province") = LOWER(roster_master_data.State_or_Country)
	)
);

DELETE FROM roster_public_school1
USING (
	SELECT Institution, "State/Province", COUNT(Institution)
	FROM high_school_data
	GROUP BY Institution, "State/Province"
	HAVING high_school_data.count > 1
) AS temp1
WHERE LOWER(roster_public_school1.Institution) = LOWER(temp1.Institution) AND LOWER(roster_public_school1."State/Province") = LOWER(temp1."State/Province")
;

CREATE TABLE roster_public_school2 AS (
	SELECT *
	FROM roster_master_data
	JOIN high_school_data
	ON high_school_data."Public/Private/International" = 'PUBLIC' AND (
		LOWER(roster_master_data.High_School) = LOWER(high_school_data.Institution)
	) AND (
		LOWER(high_school_data."State/Province") = LOWER(roster_master_data.State_or_Country)
	) AND (
		LOWER(roster_master_data.Home_Town) = LOWER(high_school_data.City)
	)
);

CREATE TABLE roster_public_final AS (
	SELECT *
	FROM roster_public_school1
	UNION
	SELECT *
	FROM
	roster_public_school2
);

-- \Copy roster_public_final to 'roster_public_final.csv' DELIMITER ',' CSV HEADER;

DROP TABLE roster_public_school1;
DROP TABLE roster_public_school2;


--Guaranteed matched International School data

CREATE TABLE roster_international_school1 AS (
	SELECT *
	FROM roster_master_data
	JOIN high_school_data
	ON high_school_data."Public/Private/International" = 'INTERNATIONAL' AND (
		LOWER(roster_master_data.High_School) = LOWER(high_school_data.Institution)
	) AND (
		LOWER(high_school_data.Country) = LOWER(roster_master_data.State_or_Country)
	)
);

DELETE FROM roster_international_school1
USING (
	SELECT Institution, Country, COUNT(Institution)
	FROM high_school_data
	GROUP BY Institution, Country
	HAVING high_school_data.count > 1
) AS temp1
WHERE LOWER(roster_international_school1.Institution) = LOWER(temp1.Institution) AND LOWER(roster_international_school1.Country) = LOWER(temp1.Country)
;

CREATE TABLE roster_international_school2 AS (
	SELECT *
	FROM roster_master_data
	JOIN high_school_data
	ON high_school_data."Public/Private/International" = 'INTERNATIONAL' AND (
		LOWER(roster_master_data.High_School) = LOWER(high_school_data.Institution)
	) AND (
		LOWER(high_school_data.Country) = LOWER(roster_master_data.State_or_Country)
	) AND (
		LOWER(roster_master_data.Home_Town) = LOWER(high_school_data.City)
	)
);

CREATE TABLE roster_international_final AS (
	SELECT *
	FROM roster_international_school1
	UNION
	SELECT *
	FROM
	roster_international_school2
);

-- \Copy roster_international_final to 'roster_international_final.csv' DELIMITER ',' CSV HEADER;

DROP TABLE roster_international_school1;
DROP TABLE roster_international_school2;


-- Unique School Names

CREATE TABLE roster_unique_final AS (
	SELECT *
	FROM roster_master_data
	JOIN high_school_data
	ON LOWER(roster_master_data.High_School) = LOWER(high_school_data.Institution) AND (LOWER(high_school_data."State/Province") = LOWER(roster_master_data.State_or_Country)
	OR LOWER(high_school_data.Country) = LOWER(roster_master_data.State_or_Country))
);

DELETE FROM roster_unique_final
USING (
	SELECT Institution, COUNT(Institution)
	FROM high_school_data
	GROUP BY Institution
	HAVING high_school_data.count > 1
) AS temp1
WHERE LOWER(roster_unique_final.Institution) = LOWER(temp1.Institution)
;

-- \Copy roster_unique_final to 'roster_unique_final.csv' DELIMITER ',' CSV HEADER;


-- Union all tables

CREATE TABLE highschool_match_master AS (
	SELECT *
	FROM roster_unique_final
	UNION
	SELECT *
	FROM (
		SELECT *
		FROM roster_public_final
		UNION
		SELECT *
		FROM roster_international_final
	) AS temp1
);

DROP TABLE roster_public_final;
DROP TABLE roster_international_final;
DROP TABLE roster_unique_final;

\Copy highschool_match_master to 'highschool_match_master.csv' DELIMITER ',' CSV HEADER;
